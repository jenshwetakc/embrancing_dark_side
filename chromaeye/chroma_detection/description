*************-------Chroma detection---------****************

#######----------Quick inconsistency detection-----------#########
1. Select one example from “example_dataset”
2. Pass the absolute path chroma_eye.py
3. Run the script

#########-----------Run the approach from scratch-----------##
1. Collect the dataset
2. Please make sure to pass the absolute file path
3. Run preprocessing in orders
4. check_paris_sc.py - make sure that your screenshot pairs are identical.
5. upstage_ocr.py - to get the text detection
6. Pre-requisites to run the file combine_uied_ld_detection.py
    - first, you have to get the uied detection - visit(https://github.com/MulongXie/UIED) and run the uied detection
    - second, resize_image.py -Resizes our screenshot as the UIED to match the UIED detection
7. Run chroma_eye.py


## ----------Each File brief overview---------------##

1. /edge_based_detection/edge_based.py - detect the edge-based inconsistency
2. /object_based_detection/object_based_detection.py - detect the object based inconsistency
3. /partial_conversion_detection/partial_conversion.py - detect whether the application supports the dark mode throughout the application
4. /chroma_detection/text_based_detection/invisible_text.py - detect invisible text
5. /chromaeye/chroma_detection/text_based_detection/missing_text.py - detect missing text

Preprocessing:
# Note: Run the preprocessing in following order:
1. /pre_processing/check_sc_pairs.py - check identical paris of screenshot
2. /pre_processing/ocr/upstage_ocr.py - get the ocr detection
3. /pre_processing/resize_image.py - resize the original screenshot
4. /pre_processing/combine_uied_ld_detection.py - combine the light and dark UIED detection.
5. /chroma_detection/chroma_eye.py - detect the inconsistency between light and dark mode



## ------------path to----------------
 1. image with normal size
    image_dir = '/chromaeye/example_dataset/edge_based/flashscore/input/image/org_size'

 2. json file directory detected using upstage ocr
    json_dir = '/chromaeye/example_dataset/edge_based/flashscore/input/ocr'

 3. image directory, resize the image into uied(detection result)
    uied_json_dir = '/chromaeye/example_dataset/edge_based/flashscore/input/uied_dl_json'

 4. json file directory from uied detection
    uied_image_dir = '/chromaeye/example_dataset/edge_based/flashscore/input/image/uied_size'

 5. meta information of the data that we have collected while collecting the dataset
    screenshot_meta_data = '/chromaeye/example_dataset/edge_based/flashscore/input/flashscore.json'

 6. output directory where you want to save the result
    output_dir = '/chromaeye/example_dataset/edge_based/flashscore/output'
